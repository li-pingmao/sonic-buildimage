# libyang

LIBYANG_VERSION_BASE = 1.0
LIBYANG_VERSION = $(LIBYANG_VERSION_BASE).70
LIBYANG_SUBVERSION = 1

export LIBYANG_VERSION_BASE
export LIBYANG_VERSION
export LIBYANG_SUBVERSION

#LIBYANG = libyang$(LIBYANG_VERSION_BASE)_$(LIBYANG_VERSION)-$(LIBYANG_SUBVERSION)_$(CONFIGURED_ARCH).deb
LIBYANG = libyang_$(LIBYANG_VERSION)_$(CONFIGURED_ARCH).deb
$(LIBYANG)_SRC_PATH = $(SRC_PATH)/libyang
$(LIBYANG)_DEPENDS += $(SWIG_BASE) $(SWIG)
SONIC_MAKE_DEBS += $(LIBYANG)
SONIC_STRETCH_DEBS += $(LIBYANG)

#LIBYANG_DEV = libyang-dev_$(LIBYANG_VERSION)-$(LIBYANG_SUBVERSION)_$(CONFIGURED_ARCH).deb
LIBYANG_DEV = libyang-dev_$(LIBYANG_VERSION)_$(CONFIGURED_ARCH).deb

#LIBYANG_DBG = libyang$(LIBYANG_VERSION_BASE)-dbgsym_$(LIBYANG_VERSION)-$(LIBYANG_SUBVERSION)_$(CONFIGURED_ARCH).deb
LIBYANG_DBG = libyang-dbgsym_$(LIBYANG_VERSION)_$(CONFIGURED_ARCH).deb
LIBYANG_CPP = libyang-cpp_$(LIBYANG_VERSION)_$(CONFIGURED_ARCH).deb
LIBYANG_PY3 = python3-yang_$(LIBYANG_VERSION)_amd64.deb
LIBYANG_PY2 = python2-yang_$(LIBYANG_VERSION)_amd64.deb

#SONIC_PYTHON_STDEB_DEBS += $(LIBYANG_PY2)

$(eval $(call add_derived_package,$(LIBYANG),$(LIBYANG_DEV)), $(LIBYANG_CPP), $(LIBYANG_PY3), $(LIBYANG_PY2))

export LIBYANG LIBYANG_DEV LIBYANG_CPP LIBYANG_PY3 LIBYANG_PY2
